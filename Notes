İşletim sistemi nedir?
Kullanıcıyla cihaz donanımı arasında bir köprü görevi gören yazılımlara işletim sistemi adı verilir.
Örneğin en basitinden Klavye mouse gibi araçları kullanırken bizim donanmına bir bilgi göndermemiz gerekmektedir. Bu noktada görev alan sistem yazılımlarına 
işletim sistemi denir.

Linux İşletim Sisteminin genel özellikleri
- Linux 1991 yılında Linus Torvalds tarafından bulunmuştur.
- Linux çoğunlukla ücretsizdir. Ancak RedHat firmasından eğitim veya sertifika almak ücretlidir.
- Linux bir işletim sistemidir. Piyasada kullanılan diğer işletim sistemleri MacOS ve Windowstur.
- Linux'un önemli özelliği her işlemin terminal üzerinden yapılabilmesinden kaynaklanmaktadır. Bu sayede çok daha hızlı çalışır.
Kısaca Linux'u bu kadar popüler yapan sahip olduğu command prompt işlevselliğidir.
- Linux öncesinde 1970 yılında Bell Labs'te Dennis Richie tarafından Linux'un temelini oluşturan Unix işletim sistemi ortaya konulmuştur.
- Linux Open Source(açık kaynak) bir işletim sistemidir.

Unix vs Linux
Linux pek çok firma ve geliştirici topluluğu(Developer Community) tarafından kullanılmaktadır.  Bunlar: RedHat, CentOS, Debian, Ubuntu, 
Linux Mint ve benzeri. Unix ise genellikle Sun firması tarafından kullanılmaktadır.

Linux Varyantları
- Ubuntu   - Fedora   - Debian
- Red Hat Enterprise Linux(RHEL)
- CentOS   - Arch Linux   - openSUSE
- Linux Mint   - Gentoo - Slackware
- Alpine Linux - Kali Linux

Linux vs Windows
- Linux Open Source yani ücretsiz ancak Windows ücretlidir.
- Linux kullanıcı sayısı da az olmasından dolayı Windows'a kıyasla daha güvenilir.
- Linux kararlılık ve performans olarak Windows'tan daha iyidir.



Cmd yönteici olarak çalıştırılır sonrasında Ubuntu indirilmesi için aşağıdaki komut çalıştırılır:
wsl --install

Linuxta dosya tipleri
Dosyaları tipleriyle birlikte listelemek için aşağıdaki komut kullanılabilir:
ls -l
Bu komuta benzer olan ls -a, ls --all veya sadece ls gibi komutlar da mevcuttur.
ls -l komutundan sonra elde edilen dosya sembolüne bağlı olarak dosyaların tipleri hakkında bilgi sahibi olunabilir.
Örneğin aşağıdaki tabloda bazı dosyaların sembolleri verilmiştir:
File Symbol          Dosya Tipi
-                    Regular
d                    Directory
l                    Link
c                    Special file or Device file
s                    Socket
p                    Named pipe
b                    Block device

Bazı önemli Linux Komutları
ifconfig -> Cihaz ipsini öğrenmeye yarayan komuttur. Windowsdaki karşılığı ipconfig komutudur. Tek başına kullanılır.
whoami veya who am i -> Kullanıcı adını görüntülemek için kullanılan komuttur.  
cd -> Açılımı Change Directory yani farklı bir dosyaya gitme işlemini yapar. Eğer gidilmeye çalışılan dosya bir directory değilse bu durumda hata verir.
ls -> Açılımı list olan bu komutu zaten daha önce öğrenmiştik. Bulunduğunuz dosya dizimindeki tüm dosyaları listeler. Sonuna -l, -a, -ltr gibi ifadeler de eklenebilir.
pwd -> Açılımı print working directory olan bu komut adından da anlaşılabileceği gibi kullanının çalışmakta olduğu dosya dizimini basar.
passwd -> Adından da anlaşılabileceği gibi şifre değişikliği yapmaya yarayan komuttur. Şifrenin bazı güvenlik koşullarına uymaması durumunda şifre değiştirilemez.
su - veya sudo su -> root kullanıcı yetkilerine erişim sağlar. Bazı işlemler bu yetki olmadan yapılamaz.
touch -> Bir regular(normal) dosya oluşturur. Kullanımın genel biçimi: touch <dosya ismi>
cp -> Açılımı copy olan bu komut ilk yazılan dosyayı ikinciye kopyalayan bir komuttur. Genel biçimi aşağıdaki gibidir: cp -R <src file> <dst file> 
Burada src file yani kaynak anlamında, dst file ise destination yani hedef anlamına gelir. Diğer taraftan -R ifadesi bir directory'nin kopyalandığını belirtir.
mkdir -> Açılımı make directory olan bu komut adından da anlaşılabileceği gibi directory oluşturmaya yarayan bir komuttur. Kullanımını genel biçimi: mkdir <directory ismi>
vi -> Bir regular dosya yaratmaya yarar ancak başka bir ekrana yönlendirir. Bu ekrandan çıkırılırken ":qw!" komutu yazılıp enter basılması gerekmektedir. Bu komutun genel biçimi: vi <dosya ismi> şeklindedir.
find -> Dosyayı bulmaya yarayan komuttur. Değişik kullanımları mevcuttur ancak iki tane önemli sırasıyla aşağıdaki gibidir: find . -name <aranan dosya ismi> veya belli bir konumda 
aramak için: find <dosyanın aranacağı alan>(örn: /home/berke) -name <aranan dosya ismi>
locate -> find ile aynı işi yapmasının yanı sıra root yetkisi var iken bu komut beklendiği gibi çalışmaz
exit -> root çıkış yapılmasını sağlar.
rm -> Açılımı remove olan bu komut dosya kaldırmada kullanılan bir komuttur. Genel kullanımı: rm <dosya ismi> şeklindedir. Bu komutun bir farklısı rm -Rf komutudur. Bu komutta bulunan "Rf" ifadesi remove forcelly anlamına gelmektedir. 
kaldırma işlemi bazı durumlarda gerçekleşemeyebilir. Bu gibi durumlarda -Rf ifadesi kullanılmalıdır. 
Anahtar Notlar: rm komutunu -Rf ile kullanmak her zaman iyi bir yöntem olmayabilir. Bazen dosyaların silinmesinin tehlikeli sonuçları olabilir. 
cat -> Dosyasının içinde bulunan yazıyı terminale basan komuta verilen isimdir. Komutun kullanımının genel biçimi: cat <dosya ismi>
chmod -> Dosya izinlerini değiştirmekted kullanılan son derece önemli bir komuttur.
man -> Bu komut Linux komutları hakkında bilgi alınmasını sağlar. Genel kullanımı: man <komut ismi> şeklindedir.
mv -> Açılımı move olan bu komut adından da anlaşılabileceği gibi bir dosyayı taşımaya yarar. Kullanımın genel biçimi: mv <kopyalanıcak dosya ismi> <taşınacağı dosya dizimi>

Wildcards(*, ?, [])
Bu ifadeler bazı işlemlerin daha kolay yapılmasına katkı sağlamaktadır. Örneğin aynı yazıyla başlayan birden fazla dosyanın tek bir komut ile 
silinmesi ancak bu ifadeler ile mümkündür. Örneğin aşağıdaki iki komutu çalıştıralım:
touch abcd{1..9}-xyz
Bu komut ile abcd1-xyz dosyasından başlayarak sırasıyla abcd2-xyz, abcd3-xyz, ... , abcd9-xyz dosyaları oluşturulacaktır.
rm abcd* 
Bu komut kullanılarak da abcd ile başlayan tüm dosyaları kaldır anlamına gelmektedir.
-> Soru işareti ise aşağıdaki gibi kullanımda
ls -l ?bcd*
Başında herhangi bir karakter olsun sadece ondan sonraki 3 karakter bcd şekilnde olsun diyebiliriz.
-> [] yani köşeli parantez ise aşağıdaki örnekte:
ls -l *[cd]* 
c veya d karakterlerinin herhangi birini isminde olan dosyaları ekrana yazdıran komuttur.
Soft and Hard Links
inode = Pointer or number of a file on the hard disk
inode aslında dosyanın adresi için kullanılan bir terimdir. Bilgisayar bizim 
gibi isim üzerinden dosyalarla çalışmaz adresleri temel alarak 
dosyalara ulaşır.
Soft Link: Söz konusu link kaldırılır veya yeniden isimlendirilir. Bu işlem "ln -s" komutuyla yapılır. 
Hard Link: orijinal dosyada Silme, yeniden isimlendirme veya taşıma işlemleri  Hard Linki, doğrudan veya dolaylı olarak etkilemez.
Bu işlem "ln -s" komutuyla yapılır.
Anahtar Notlar: /tmp directory konumuna gidilmeden soft ve hard link oluşturulması mümkün değildir. Bu sebeple
ln -s <dosya uzantısı>
komutu kullanılarak dosya belirtilen dizime soft link oluşturur.
- Soft Linkte kaynak dosya silindiği zaman dosya rengi tmp diziminde kırmızıya döner ve uzantı görünse bile 
herhangi bir işlem yapılamaz. Yapılmaya kalkılması durumunda ise "No such directory or file" hatası oluşur.
Hard Link: "ln" komutu kullanılarak oluşturulur. Genel biçimi:
ln <dosya uzantısı>
- Hard linkte gösterilen bir dizim yoktur. Bu sebeple kullanılan kaynak dosya silinse bile hard link kullanılabilir.
- Hard linkte dosyada yapılan herhangi bir ekleme doğrudan linkte bulunan dosyayı da etkiler.
Özet: Hard linkte kaynak dosya silinse de silinmemiş gibi kullanılabilir. Ancak Soft linkte dosya silindiği takdirde 
hiçbir şekilde kullanılamaz.


--------------------------------------------------------
For Studying:
Change your password

Create 10 files under your home directory (File names = jerry, kramer, george, lex, clark, lois, homer, bart, lisa, and marge)

Create 3 directories under your home directory (Dir name = seinfeld, superman and simpsons)  

Create a new file jupiter and write to it as "Jupiter is a planet".  Then create a soft link in /tmp directory

Also create a hard link of jupiter in /tmp directory

Check the inodes of both links 
--------------------------------------------------------

Linuxta Dosya izinleri
Dosyalara ait 3 farklı izin mevcuttur. Bunlar:
1-) r - Read(Okuma)
2-) w - Write(Yazma)
3-) x - Execute(çalıştırma):Bu izin dosyanın bir script olması durumunda geçerlidir.
Her dosya izinlerde 3 farklı seviye vardır. Bu seviyeler:
1-) u - User(Kendimiz)
2-) g - Group(Projede bulunan farklı kişiler olabilir.)
3-) o - other(Sistemdeki herkes)
- Dosyaların izinleri hakkında bilgiler "ls -l" komutu kullanılarak görüntülebilir. Bu komut çalıştırıldığında en başta bulunan
yazı bu izinleri ifade etmektedir.
- İzinleri değiştirmek için kullanılan komut daha önce de belirtiğimiz gibi "chmod" komutudur.
- Örneğin "chmod u-w dosya1" komutu çalıştırıldığında dosya1 dosyası için kullanının yazma izni varsa kaldırılır. 
- Kullanıcıda olmayan bir izin olduğu durumlarda bu eylemleri gerçekleştirme girişimi Permission denied hatasıyla sonlanır. 
Örneğin read yani okuma izni olmayan bir dosya için "cat" komutu çalıştırılmak istenmesi durumunda böyle bir hatayla karşılaşılır.
- "chmod a-w <dosya ismi>" komutuyla birlikte 3 seviyenin tamamındaki write yani yazma izinleri kapatılır.
- İzinlerin açılmasında ise "-" yerine "+" ifadesi kullanılır. Örneğin user için yazma izni açılmak isteniyorsa, bu durumda "chmod u+w <dosya ismi>"
şeklinde bir komut çalıştırılır.
- İzinlerin çalışması tek seferde birden fazla da olabilir. Örneğin hem yazma hem okuma özelliği açılmak isteniyorsa, bu durumda "chmod u+rw <dosya ismi>"
şeklinde bir komut çalıştırılarak, bu işlem gerçekleştirilir.
- Execute izni eğer bir directory'de mevcut değilse, bu durumda o directory'e girilemez. Örneğin "chmod a-x <dir. ismi>" komutu sonucunda gerçekleşir.
Permission Using Numeric Mode
Dosyaların daha önce belirtiğimiz yöntemden farklı olarak nümerik yöntem kullanılarak da izinlerinin değiştirilmesi mümkündür. Aşağıdaki tabloda 
numaraya bağlı olarak hangi izinlerin açılacağı açıklanmıştır.
Number      Permission Type            Symbol
  0         No Permission              ---
  1         Execute                    --x
  2         Write                      -w-
  3         Execute + Write            -wx
  4         Read                       r--
  5         Read + Execute             r-x
  6         Read + Write               rw-
  7         Read + Write + Execute     rwx
Bu tabloya göre "chmod 764 <dosya ismi>" komutu çalıştırılsa 764 sayısının rakamları basamak basamak 
incelenir. Buna göre:
7 -> Read + Write + Execute -> rwx -> User(u)
6 -> Read + Write -> rw- -> Group(g)
4 -> Read -> r-- -> Other(o)
Şeklinde olacaktır. Yani bu komut aslında izinleri farklı bir yoldan değiştirmeye yarar. Bu örnek için 
ls -l yapıldığında dosyanın sembol kısmı aşağıdaki gibi olmalıdır:
"-rwxrw-r--" şeklinde olacaktır.
Örnekler eklenecek!!
File Ownership(Dosya sahipliği)
Dosya sahibi iki adet olabilir:
1-) User
2-) Group
Dosya sahipliği değiştirmek için "chown" komutu kullanılmaktadır. Bu komutun kullanımın genel biçimi
"chown <sahiplenecek kullanıcı(username or root)> <sahiplenilecek dosya ismi>"
Örnek: İsmi lisa olan dosyanın erişim iznini root yapan Linux terminal komutunu yazınız.
Çözüm: chown root lisa
----------------------------------------------------
Access Control List(ACL- Erişim Kontrol Listesi)
1-) Kullanıcıya izin ekleme komutu
setfacl -m u:user:rwx /path/to/file

2-) Gruba(Group) izin eklemek
setfacl -m g:group:rw /path/to/file

3-) To allow all the files or directories to inherit ACL entries from the directory it is within
setfacl -dm "entry" /path/to/dir

4-) To remove a specific entry
setfacl -x u:user /path/to/file

5-) To remove all entries
setfacl -b path/to/file

Help Commands(Yardımcı Komutlar)
Linuxta 3 farklı yardım komutu mevcuttur:
1-) whatis <komut>
2-) <komut> --help
3-) man <komut>

Örnekler:
- whatis ls
- whatis cd
- man ls
- man cd
- ls --help
- cd --help

Linuxta input ve output işlemleri
Herhangi bir komut doğrudan çalıştırıldığında elde edilecek çıktı doğrudan terminale basılır. Ancak komutun çalışmasında elde edilecek yazının 
şüphesiz kullanıcının istediği bir dosyaya da basılması mümkündür. bu işlem aşağıdaki örnekte gösterildiği gibi yapılabilir. Burada hedef 
ls -l komutunun "listings" isimli dosyaya yazdırılmasıdır.
ls -l > listings
cat listings
Yukarıda kullanılmış olan cat komutu ise dosyada bulunan yazının ekrana basılmasında kullanılmaktadır.
yazmada kullanılan diğer bir ifade ise ">>" ifadesidir. ">" ve ">>" ifadelerinin tek farkı birincisi 
override ederek yani yazılacak dosyada herhangi başka yazı var tamamen boşaltıp yerine o yazıyı yazan bir özelliğe sahiptir.
Diğer taraftan ">>" ifadesi ise dosyayı override etmez ekleyerek yazar.

tee komutu:
tee komutu bir yandan dosyaya yazılırken aynı zamanda da ekrana terminale basma yapılmasını mümkün kılar. Mesela 
aşağıdaki örnekte ls -l komutuyla hem terminale hem de dosyaya yazma işlemi gerçekleştirilir.
Örnekler:
echo "Berke" | tee file1
Yukarıdaki komut ile birlikte hem Berke yazısı terminale hem de file1 dosyasına basılacaktır.
echo "Sertel" | tee file1
tee komutu eğer ilk yazılan komuttan sonra kullanılırsa bu durumda override eder. Ancak üzerine ekleme yapmak 
isteniyorsa bu durumda -a ile kullanılması gerekmektedir.
echo "Sertel" | tee -a file1
Komut bu şekilde çalıştırıldığı takdirde override etmek yerine ekleyerek yazar.
Sonrasında "cat file1" komutu çalıştırıldığı takdirde terminale "Berke Sertel" yazısı 
basılacaktır. 
- Karakter sayısını elde elden bir komut olan wc de bu noktada işimize yarayan bir komuttur. Aşağıda
örnek bir kullanımı verilmiştir:
wc -c file1
- ls -l komudundan elde edilecek olan terminal çıktısı da dosyaya yazdırılabilir. Örneğin:
ls -l | tee listdir
komutu terminale ls -l çıktısını vermesinin yanı sıra bunu listdir dosyasının içerisine de yazacaktır.

ls -l | tee file1 file2 file3
Yukarıdaki komutta terminalin yanı sıra file1, file2 ve file3 dosyalarının tamamına basma işlemi yapılır.

Pipes:
more and tail
ls -l | more

File Display Commands
- cat(cat <dosya ismi>)
- more(more <dosya ismi>)
- less(less <dosya ismi>)
- head (head -2 <dosya ismi>: dosyada bulunan ilk 2 satırı terminale bas.)
- tail (tail -2 <dosya ismi>: dosyada bulunan son 2 satırı terminale bas.)

Text Processors Commands
- cut komutu: Bu komut sadece dosya ismiyle çalışmaz ancak Aşağıdaki gibi varjantları çalışır:
cut --version: 
cut -c1 <dosya ismi>: Dosyadaki her satırın ilk karakterini terminale basar.
cut -c1,3,5,7 <dosya ismi>: Bu komut dosyada bulunan her satırdaki 3. 5. ve 7. satırdaki karakteriler hariç bütün karakterleri siler.
cut -c1-3 <dosya ismi>: Dosyadaki her satırdaki ilk 3 karakteri elde eder.
cut -c1-3,6-8 <dosya ismi>: Dosyadaki her satırdaki ilk 3 karakterle birlikte 6,7 ve 8. karakterleri de elde eden komuttur.
cut -b1-3 <dosya ismi>: Dosyadaki her satırda bulunan bit uzunluğunu verir.
cut -d: -f 6 /etc/passwd : 
cut -d: -f 6-7 /etc/passwd: 
ls -l | cut -c2-4: 






